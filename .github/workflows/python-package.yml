name: Python Package CI

on:
  push:
    branches:
      - '**'  # Matches any branch for tests
    tags:
      - 'v*'  # Matches any tag for tests and publishing
  pull_request:
    branches:
      - '**'  # Matches any branch for tests

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install black
        run: |
          python -m pip install --upgrade pip
          pip install black==24.10.0

      - name: Run black to check code formatting
        run: |
          black --check --verbose .

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: |
          pytest

  tag:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Check out the code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install setuptools and setuptools_scm
        run: |
          python -m pip install --upgrade pip
          pip install setuptools setuptools-scm

      - name: Get the current version
        id: get_version
        run: echo "VERSION=$(python setup.py --version)" >> $GITHUB_ENV

      - name: Create and push tag
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git tag -a "v${VERSION}" -m "Release version ${VERSION}"
          git push origin "v${VERSION}"

  publish:
    needs: [ lint, test, tag ]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build the package
        run: |
          python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload dist/*
